import asyncio
import json
import os
import random
import asyncio
import subprocess
import logging
import datetime
from telegram.ext import JobQueue
from pathlib import Path
from telegram.ext import filters
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import (
    Application, filters, CommandHandler, CallbackQueryHandler, ContextTypes, CallbackContext, MessageHandler
)
from apscheduler.schedulers.asyncio import AsyncIOScheduler
import asyncio
import nest_asyncio

# —Ç–æ–∫–µ–Ω
TOKEN = "7620764762:AAEcapfLboAOgmy7OBCShxUc84OSRFg3KDg"

# –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∞
TEST_DESCRIPTION = (
    "–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤—ã—Ä–∞–∂–µ–Ω–Ω–æ—Å—Ç—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ª–∏—á–Ω–æ—Å—Ç–∏.\n\n"
    "–¢—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å –∫–∞–∫ –ª–∏—á–Ω–æ—Å—Ç–Ω–∞—è —á–µ—Ä—Ç–∞ –æ–∑–Ω–∞—á–∞–µ—Ç –º–æ—Ç–∏–≤ –∏–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω—É—é –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫—É—é –ø–æ–∑–∏—Ü–∏—é, "
    "–∫–æ—Ç–æ—Ä–∞—è –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç —á–µ–ª–æ–≤–µ–∫–∞ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—Ç—å —à–∏—Ä–æ–∫–∏–π –∫—Ä—É–≥ –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤ "
    "–∫–∞–∫ —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö —É–≥—Ä–æ–∑—É, –ø–æ–±—É–∂–¥–∞—è —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ —Ç—Ä–µ–≤–æ–≥–∏.\n\n"
    "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
)
# —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é
EMOTION_ADVICE = {
    "–°—Ç—Ä–µ—Å—Å": [
        (
            "üîÑ –ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ\n\n"
            "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
            "- –í–¥–æ—Ö —á–µ—Ä–µ–∑ –Ω–æ—Å (4 —Å–µ–∫)\n"
            "- –ó–∞–¥–µ—Ä–∂–∫–∞ (4 —Å–µ–∫)\n"
            "- –í—ã–¥–æ—Ö —á–µ—Ä–µ–∑ —Ä–æ—Ç (4 —Å–µ–∫)\n"
            "- –ü–∞—É–∑–∞ (4 —Å–µ–∫)\n\n"
            "üîÅ –¶–∏–∫–ª: 5-10 –ø–æ–≤—Ç–æ—Ä–æ–≤\n"
            "üí´ –≠—Ñ—Ñ–µ–∫—Ç: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç —Å–µ—Ä–¥—Ü–µ –∏ –º–æ–∑–≥"
        ),
        (
            "üö∂ –ê–Ω—Ç–∏—Å—Ç—Ä–µ—Å—Å-–ø—Ä–æ–≥—É–ª–∫–∞\n\n"
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
            "- –ò–¥–∏—Ç–µ –≤ —Å–ø–æ–∫–æ–π–Ω–æ–º —Ç–µ–º–ø–µ\n"
            "- –û—Ç–º–µ—á–∞–π—Ç–µ –¥–µ—Ç–∞–ª–∏ –≤–æ–∫—Ä—É–≥ (–¥–µ—Ä–µ–≤—å—è, –æ–±–ª–∞–∫–∞)\n"
            "- –û—Ç–∫–ª—é—á–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–∞ 10 –º–∏–Ω\n\n"
            "üåø –≠—Ñ—Ñ–µ–∫—Ç: –ü–æ–≤—ã—à–∞–µ—Ç –æ–∫—Å–∏—Ç–æ—Ü–∏–Ω"
        )
    ],
    "–¢—Ä–µ–≤–æ–≥–∞": [
        (
            "üåÄ –î—ã—Ö–∞–Ω–∏–µ 4-7-8\n\n"
            "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
            "- –í–¥–æ—Ö —á–µ—Ä–µ–∑ –Ω–æ—Å (4 —Å–µ–∫)\n"
            "- –ó–∞–¥–µ—Ä–∂–∫–∞ –¥—ã—Ö–∞–Ω–∏—è (7 —Å–µ–∫)\n"
            "- –í—ã–¥–æ—Ö —á–µ—Ä–µ–∑ —Ä–æ—Ç (8 —Å–µ–∫)\n\n"
            "üí® –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 4 —Ü–∏–∫–ª–∞\n"
            "‚ú® –≠—Ñ—Ñ–µ–∫—Ç: –°–Ω–∏–∂–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∞–¥—Ä–µ–Ω–∞–ª–∏–Ω–∞\n"
            "–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π –î—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ, —á—Ç–æ–±—ã –¥–µ–ª–∞—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –≤–º–µ—Å—Ç–µ!"
        ),
        (
            "üìø –ú–µ–¥–∏—Ç–∞—Ü–∏—è –Ω–∞ –¥—ã—Ö–∞–Ω–∏–∏\n\n"
            "–ö–∞–∫ –≤—ã–ø–æ–ª–Ω—è—Ç—å:\n"
            "- –°—è–¥—å—Ç–µ —É–¥–æ–±–Ω–æ, –∑–∞–∫—Ä–æ–π—Ç–µ –≥–ª–∞–∑–∞\n"
            "- –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –≤–¥–æ—Ö–∞—Ö/–≤—ã–¥–æ—Ö–∞—Ö\n"
            "- –°—á–∏—Ç–∞–π—Ç–µ: ¬´–í–¥–æ—Ö-1, –≤—ã–¥–æ—Ö-2¬ª (–¥–æ 10)\n\n"
            "‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 5-10 –º–∏–Ω—É—Ç\n"
            "‚ú® –≠—Ñ—Ñ–µ–∫—Ç: –°–Ω–∏–∂–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∫–æ—Ä—Ç–∏–∑–æ–ª–∞"
        )
    ],
    "–£—Å—Ç–∞–ª–æ—Å—Ç—å": [
        (
            "üí§ –¢–µ—Ö–Ω–∏–∫–∞ ¬´–ö–æ—Ñ–µ-–Ω–∞–ø¬ª\n\n"
            "–ö–∞–∫ –≤—ã–ø–æ–ª–Ω—è—Ç—å:\n"
            "- –í—ã–ø–µ–π—Ç–µ —á–∞—à–∫—É –∫–æ—Ñ–µ (–±–µ–∑ —Å–∞—Ö–∞—Ä–∞)\n"
            "- –°—Ä–∞–∑—É –ª—è–≥—Ç–µ –ø–æ—Å–ø–∞—Ç—å –Ω–∞ 15-20 –º–∏–Ω\n"
            "- –ü—Ä–æ—Å–Ω–∏—Ç–µ—Å—å –¥–æ —Ñ–∞–∑—ã –≥–ª—É–±–æ–∫–æ–≥–æ —Å–Ω–∞\n\n"
            "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø—Ä–∏ –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏–∏"
        ),
        (
            "üéß –ó–≤—É–∫–æ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã —Ç—Ä–µ–∫–æ–≤:\n"
            "- –®—É–º –ø—Ä–∏–±–æ—è (10-—á–∞—Å–æ–≤–æ–π loop)\n"
            "- –ü–µ–Ω–∏–µ –∫–∏—Ç–æ–≤ (Calm, Headspace)\n\n"
            "üîä –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n"
            "- –í–∫–ª—é—á–∏—Ç–µ —Ñ–æ–Ω–æ–º –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã\n"
            "- –°–ª—É—à–∞–π—Ç–µ –≤ –Ω–∞—É—à–Ω–∏–∫–∞—Ö –¥–ª—è –ø–æ–≥—Ä—É–∂–µ–Ω–∏—è\n"
            "‚ùï–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π –†–µ–ª–∞–∫—Å–∞—Ü–∏—è, —á—Ç–æ–±—ã —É–∂–µ –Ω–∞—á–∞—Ç—å —Å–ª—É—à–∞—Ç—å –º—É–∑—ã–∫—É –¥–ª—è —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è!"
        )
    ],
    "–ì–Ω–µ–≤": [
        (
            "üí• –¢–µ—Ö–Ω–∏–∫–∞ ¬´–ë—É–º–∞–∂–Ω—ã–π –≥–Ω–µ–≤¬ª\n\n"
            "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
            "- –°–∫–æ–º–∫–∞–π—Ç–µ –ª–∏—Å—Ç –±—É–º–∞–≥–∏\n"
            "- –†–∞–∑–æ—Ä–≤–∏—Ç–µ –µ–≥–æ –Ω–∞ –º–µ–ª–∫–∏–µ –∫—É—Å–æ—á–∫–∏\n"
            "- –í—ã–±—Ä–æ—Å—å—Ç–µ –≤ —É—Ä–Ω—É —Å –º—ã—Å–ª—å—é: ¬´–ì–Ω–µ–≤ —É—Ö–æ–¥–∏—Ç¬ª\n\n"
            "üî• –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: –ü–æ–±–∏—Ç—å –ø–æ–¥—É—à–∫—É"
        ),
        (
            "‚ùÑÔ∏è –î—ã—Ö–∞–Ω–∏–µ ¬´–û—Ö–ª–∞–∂–¥–µ–Ω–∏–µ¬ª\n\n"
            "–ö–∞–∫ –≤—ã–ø–æ–ª–Ω—è—Ç—å:\n"
            "- –í–¥–æ—Ö —á–µ—Ä–µ–∑ –Ω–æ—Å (3 —Å–µ–∫)\n"
            "- –í—ã–¥–æ—Ö —á–µ—Ä–µ–∑ —Å–ª–æ–∂–µ–Ω–Ω—ã–µ —Ç—Ä—É–±–æ—á–∫–æ–π –≥—É–±—ã (6 —Å–µ–∫)\n\n"
            "‚è± 10 —Ü–∏–∫–ª–æ–≤ ‚Üí —Å–Ω–∏–∂–∞–µ—Ç –∏–º–ø—É–ª—å—Å–∏–≤–Ω–æ—Å—Ç—å"
        )
    ],
    "–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ": [
        (
            "ü§ù –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —á–µ–ª–ª–µ–Ω–¥–∂\n\n"
            "–ß—Ç–æ –¥–µ–ª–∞—Ç—å:\n"
            "- –ù–∞–ø–∏—à–∏—Ç–µ 3 –ª—é–¥—è–º —Å –≤–æ–ø—Ä–æ—Å–æ–º ¬´–ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞?¬ª\n"
            "- –ü—Ä–∏–º–∏—Ç–µ —É—á–∞—Å—Ç–∏–µ –≤ –æ–Ω–ª–∞–π–Ω-–∏–≤–µ–Ω—Ç–∞—Ö (–≤–µ–±–∏–Ω–∞—Ä—ã, –∏–≥—Ä—ã)\n\n"
            "üåê –ü—Ä–∏–º–µ—Ä—ã: Meetup, Discord-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞"
        ),
        (
            "üìù –ü–∏—Å—å–º–æ –±—É–¥—É—â–µ–º—É —Å–µ–±–µ\n\n"
            "–®–∞–±–ª–æ–Ω:\n"
            "- ¬´–ß–µ—Ä–µ–∑ –≥–æ–¥ —è –±—É–¥—É...¬ª\n"
            "- ¬´–°–µ–π—á–∞—Å –º–Ω–µ –≤–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ...¬ª\n\n"
            "‚úâÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–∏—Å—å–º–æ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å FutureMe"
        )
    ],
    "–ê–ø–∞—Ç–∏—è": [
        (
            "üöÄ –ú–∏–∫—Ä–æ—Ü–µ–ª–∏\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã:\n"
            "- –°–¥–µ–ª–∞—Ç—å 5-–º–∏–Ω—É—Ç–Ω—É—é –∑–∞—Ä—è–¥–∫—É\n"
            "- –ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —á–∞–π —Å –ª—é–±–∏–º–æ–π –¥–æ–±–∞–≤–∫–æ–π\n\n"
            "‚úÖ –ö–∞–∂–¥–∞—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Üí —à–∞–≥ –∫ –≤—ã—Ö–æ–¥—É –∏–∑ –∞–ø–∞—Ç–∏–∏"
        ),
        (
            "üé≠ –¢–µ—Ö–Ω–∏–∫–∞ ¬´–ê–∫—Ç—ë—Ä¬ª\n\n"
            "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
            "- –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã –∏–≥—Ä–∞–µ—Ç–µ —ç–Ω–µ—Ä–≥–∏—á–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n"
            "- –î–µ–π—Å—Ç–≤—É–π—Ç–µ ¬´–∫–∞–∫ –±—É–¥—Ç–æ¬ª 15 –º–∏–Ω—É—Ç\n\n"
            "üéØ –≠—Ñ—Ñ–µ–∫—Ç: –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –º–æ–∑–≥-—Ç–µ–ª–æ"
        )
    ],
    "–†–∞–¥–æ—Å—Ç—å": [
        (
            "üéâ –¢–µ—Ö–Ω–∏–∫–∞ ¬´–ö–∞–ø—Å—É–ª–∞ —Å—á–∞—Å—Ç—å—è¬ª\n\n"
            "–ß—Ç–æ –¥–µ–ª–∞—Ç—å:\n"
            "- –ó–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –±—É–º–∞–≥–µ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –≤—ã —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ —Ä–∞–¥–æ—Å—Ç—å\n"
            "- –ü–æ–ª–æ–∂–∏—Ç–µ –≤ –±–∞–Ω–∫—É –∏ –ø–µ—Ä–µ—á–∏—Ç—ã–≤–∞–π—Ç–µ –≤ —Ç—Ä—É–¥–Ω—ã–µ –¥–Ω–∏\n\n"
            "üì¶ –≠—Ñ—Ñ–µ–∫—Ç: –°–æ–∑–¥–∞–µ—Ç ¬´–±–∞–Ω–∫¬ª –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π"
        ),
        (
            "üåû –†–∏—Ç—É–∞–ª –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã:\n"
            "- –ù–∞–∑–æ–≤–∏—Ç–µ 3 –≤–µ—â–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã —Å–µ–≥–æ–¥–Ω—è\n"
            "- –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é —Å –±–ª–∏–∑–∫–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º\n\n"
            "üí´ –ü–æ—á–µ–º—É —Ä–∞–±–æ—Ç–∞–µ—Ç: –°–º–µ—â–∞–µ—Ç —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–∑–∏—Ç–∏–≤"
        )
    ],
    "–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ": [
        (
            "üïØÔ∏è –ü—Ä–∞–∫—Ç–∏–∫–∞ ¬´–ß–∞–π–Ω–∞—è —Ü–µ—Ä–µ–º–æ–Ω–∏—è¬ª\n\n"
            "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
            "- –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ —á–∞–π –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ: –Ω–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ —Ü–≤–µ—Ç–æ–º, –ø–∞—Ä–æ–º, –∞—Ä–æ–º–∞—Ç–æ–º\n"
            "- –ü–µ–π—Ç–µ –º–µ–¥–ª–µ–Ω–Ω–æ, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É—è—Å—å –Ω–∞ –≤–∫—É—Å–µ\n\n"
            "üçµ –≠—Ñ—Ñ–µ–∫—Ç: –ó–∞–º–µ–¥–ª—è–µ—Ç —Ä–∏—Ç–º, —Å–Ω–∏–∂–∞–µ—Ç —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å"
        ),
        (
            "üåÄ –î—ã—Ö–∞–Ω–∏–µ 4-7-8\n\n"
            "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
            "- –í–¥–æ—Ö —á–µ—Ä–µ–∑ –Ω–æ—Å (4 —Å–µ–∫)\n"
            "- –ó–∞–¥–µ—Ä–∂–∫–∞ –¥—ã—Ö–∞–Ω–∏—è (7 —Å–µ–∫)\n"
            "- –í—ã–¥–æ—Ö —á–µ—Ä–µ–∑ —Ä–æ—Ç (8 —Å–µ–∫)\n\n"
            "üí® –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 4 —Ü–∏–∫–ª–∞\n"
            "‚ú® –≠—Ñ—Ñ–µ–∫—Ç: –ë–∞–ª–∞–Ω—Å–∏—Ä—É–µ—Ç –Ω–µ—Ä–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É\n"
            "‚ùï–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π –î—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ, —á—Ç–æ–±—ã –¥–µ–ª–∞—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –≤–º–µ—Å—Ç–µ!"
        )
    ],
    "–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ": [
        (
            "üöÄ –ú–µ—Ç–æ–¥ ¬´–°–ª—É—á–∞–π–Ω—ã–π –≤—Ö–æ–¥¬ª\n\n"
            "–î–µ–π—Å—Ç–≤–∏—è:\n"
            "- –û—Ç–∫—Ä–æ–π—Ç–µ –∫–Ω–∏–≥—É –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ ‚Üí –ø—Ä–æ—á—Ç–∏—Ç–µ –∞–±–∑–∞—Ü\n"
            "- –í–∫–ª—é—á–∏—Ç–µ —Ä–∞–¥–∏–æ ‚Üí –∑–∞–ø–∏—à–∏—Ç–µ –ø–µ—Ä–≤—É—é —É—Å–ª—ã—à–∞–Ω–Ω—É—é —Ñ—Ä–∞–∑—É\n\n"
            "üé≤ –ü–æ—á–µ–º—É —Ä–∞–±–æ—Ç–∞–µ—Ç: –°—Ç–∏–º—É–ª–∏—Ä—É–µ—Ç –∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ"
        ),
        (
            "üì∏ –§–æ—Ç–æ-—á–µ–ª–ª–µ–Ω–¥–∂ ¬´–ù–æ–≤—ã–π –≤–∑–≥–ª—è–¥¬ª\n\n"
            "–ó–∞–¥–∞–Ω–∏–µ:\n"
            "- –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ 5 –æ–±—ã—á–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–µ–æ–±—ã—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º\n"
            "- –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å –¥—Ä—É–≥–æ–º –∏–ª–∏ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö\n\n"
            "üîç –≠—Ñ—Ñ–µ–∫—Ç: –†–∞–∑–≤–∏–≤–∞–µ—Ç –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"
        )
    ],
    "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å": [
        (
            "üí™ –ü—Ä–∞–∫—Ç–∏–∫–∞ ¬´–ü–æ–∑–∞ —Å—É–ø–µ—Ä–≥–µ—Ä–æ—è¬ª\n\n"
            "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
            "- –í—Å—Ç–∞–Ω—å—Ç–µ –ø—Ä—è–º–æ, —Ä—É–∫–∏ –Ω–∞ –±–µ–¥—Ä–∞—Ö, –ø–æ–¥–±–æ—Ä–æ–¥–æ–∫ –ø—Ä–∏–ø–æ–¥–Ω—è—Ç\n"
            "- –£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ø–æ–∑—É 2 –º–∏–Ω—É—Ç—ã\n\n"
            "ü¶∏ –≠—Ñ—Ñ–µ–∫—Ç: –ü–æ–≤—ã—à–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å —Ç–µ—Å—Ç–æ—Å—Ç–µ—Ä–æ–Ω–∞"
        ),
        (
            "üìñ –ê—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏ –¥–ª—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã:\n"
            "- ¬´–Ø —Å–ø—Ä–∞–≤–ª—è–ª—Å—è —Å —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ —Ä–∞–Ω—å—à–µ ‚Äî —Å–ø—Ä–∞–≤–ª—é—Å—å –∏ —Å–µ–π—á–∞—Å¬ª\n"
            "- ¬´–ú–æ–µ –º–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω–æ¬ª\n\n"
            "üîÅ –ü—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç–µ –≤—Å–ª—É—Ö –ø–µ—Ä–µ–¥ –∑–µ—Ä–∫–∞–ª–æ–º"
        )
    ]

}
# –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞
EMOTION_MAPPING = {
    "anxiety": "–¢—Ä–µ–≤–æ–≥–∞",
    "stress": "–°—Ç—Ä–µ—Å—Å",
    "fatigue": "–£—Å—Ç–∞–ª–æ—Å—Ç—å",
    "anger": "–ì–Ω–µ–≤",
    "loneliness": "–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ",
    "apathy": "–ê–ø–∞—Ç–∏—è",
    "worry": "–ë–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–æ", 
    "overload": "–ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞",
    "confidence": "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å",
    "inspiration": "–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ",
    "calm": "–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ",
    "joy": "–†–∞–¥–æ—Å—Ç—å"
}

# –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–µ—Å—Ç—É
SPIELBERGER_QUESTIONS = [
    # —Å–∏—Ç—É–∞—Ç–∏–≤–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å (1-20)
    "1. –Ø —Å–ø–æ–∫–æ–µ–Ω",
    "2. –ú–Ω–µ –Ω–∏—á—Ç–æ –Ω–µ —É–≥—Ä–æ–∂–∞–µ—Ç",
    "3. –Ø –Ω–∞—Ö–æ–∂—É—Å—å –≤ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–∏",
    "4. –Ø –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ —Å–∫–æ–≤–∞–Ω",
    "5. –Ø —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —Å–≤–æ–±–æ–¥–Ω–æ",
    "6. –Ø —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω",
    "7. –ú–µ–Ω—è –≤–æ–ª–Ω—É—é—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –Ω–µ—É–¥–∞—á–∏",
    "8. –Ø –æ—â—É—â–∞—é –¥—É—à–µ–≤–Ω—ã–π –ø–æ–∫–æ–π",
    "9. –Ø –≤—Å—Ç—Ä–µ–≤–æ–∂–µ–Ω",
    "10. –Ø –∏—Å–ø—ã—Ç—ã–≤–∞—é —á—É–≤—Å—Ç–≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏—è",
    "11. –Ø —É–≤–µ—Ä–µ–Ω –≤ —Å–µ–±–µ",
    "12. –Ø –Ω–µ—Ä–≤–Ω–∏—á–∞—é",
    "13. –Ø –Ω–µ –Ω–∞—Ö–æ–∂—É —Å–µ–±–µ –º–µ—Å—Ç–∞",
    "14. –Ø –≤–∑–≤–∏–Ω—á–µ–Ω",
    "15. –Ø –Ω–µ —á—É–≤—Å—Ç–≤—É—é —Å–∫–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏, –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è",
    "16. –Ø –¥–æ–≤–æ–ª–µ–Ω",
    "17. –Ø –æ–∑–∞–±–æ—á–µ–Ω",
    "18. –Ø —Å–ª–∏—à–∫–æ–º –≤–æ–∑–±—É–∂–¥–µ–Ω –∏ –º–Ω–µ –Ω–µ –ø–æ —Å–µ–±–µ",
    "19. –ú–Ω–µ —Ä–∞–¥–æ—Å—Ç–Ω–æ",
    "20. –ú–Ω–µ –ø—Ä–∏—è—Ç–Ω–æ",
    # –ª–∏—á–Ω–æ—Å—Ç–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å (21-40)
    "21. –£ –º–µ–Ω—è –±—ã–≤–∞–µ—Ç –ø—Ä–∏–ø–æ–¥–Ω—è—Ç–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ",
    "22. –Ø –±—ã–≤–∞—é —Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω—ã–º",
    "23. –Ø –ª–µ–≥–∫–æ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞—é—Å—å",
    "24. –Ø —Ö–æ—Ç–µ–ª –±—ã –±—ã—Ç—å —Ç–∞–∫–∏–º –∂–µ —É–¥–∞—á–ª–∏–≤—ã–º, –∫–∞–∫ –∏ –¥—Ä—É–≥–∏–µ",
    "25. –Ø —Å–∏–ª—å–Ω–æ –ø–µ—Ä–µ–∂–∏–≤–∞—é –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ—Å—Ç–∏ –∏ –¥–æ–ª–≥–æ –Ω–µ –º–æ–≥—É –æ –Ω–∏—Ö –∑–∞–±—ã—Ç—å",
    "26. –Ø —á—É–≤—Å—Ç–≤—É—é –ø—Ä–∏–ª–∏–≤ —Å–∏–ª –∏ –∂–µ–ª–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å",
    "27. –Ø —Å–ø–æ–∫–æ–µ–Ω, —Ö–ª–∞–¥–Ω–æ–∫—Ä–æ–≤–µ–Ω –∏ —Å–æ–±—Ä–∞–Ω",
    "28. –ú–µ–Ω—è —Ç—Ä–µ–≤–æ–∂–∞—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏",
    "29. –Ø —Å–ª–∏—à–∫–æ–º –ø–µ—Ä–µ–∂–∏–≤–∞—é –∏–∑-–∑–∞ –ø—É—Å—Ç—è–∫–æ–≤",
    "30. –Ø –±—ã–≤–∞—é –≤–ø–æ–ª–Ω–µ —Å—á–∞—Å—Ç–ª–∏–≤",
    "31. –Ø –≤—Å–µ –ø—Ä–∏–Ω–∏–º–∞—é –±–ª–∏–∑–∫–æ –∫ —Å–µ—Ä–¥—Ü—É",
    "32. –ú–Ω–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–µ–±–µ",
    "33. –Ø —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –±–µ–∑–∑–∞—â–∏—Ç–Ω—ã–º",
    "34. –Ø —Å—Ç–∞—Ä–∞—é—Å—å –∏–∑–±–µ–≥–∞—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π –∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π",
    "35. –£ –º–µ–Ω—è –±—ã–≤–∞–µ—Ç —Ö–∞–Ω–¥—Ä–∞",
    "36. –Ø –±—ã–≤–∞—é –¥–æ–≤–æ–ª–µ–Ω",
    "37. –í—Å—è–∫–∏–µ –ø—É—Å—Ç—è–∫–∏ –æ—Ç–≤–ª–µ–∫–∞—é—Ç –∏ –≤–æ–ª–Ω—É—é—Ç –º–µ–Ω—è",
    "38. –ë—ã–≤–∞–µ—Ç, —á—Ç–æ —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –Ω–µ—É–¥–∞—á–Ω–∏–∫–æ–º",
    "39. –Ø —É—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫",
    "40. –ú–µ–Ω—è –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–æ, –∫–æ–≥–¥–∞ —è –¥—É–º–∞—é –æ —Å–≤–æ–∏—Ö –¥–µ–ª–∞—Ö –∏ –∑–∞–±–æ—Ç–∞—Ö"
]

ANSWER_OPTIONS = [
    ("–ù–∏–∫–æ–≥–¥–∞", "0"),
    ("–ü–æ—á—Ç–∏ –Ω–∏–∫–æ–≥–¥–∞", "1"),
    ("–ß–∞—Å—Ç–æ", "2"),
    ("–ü–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞", "3")
]

# –∫–ª—é—á –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤
INVERTED_QUESTIONS = [1, 2, 5, 8, 10, 11, 15, 16, 19, 20, 21, 26, 27, 30, 36, 39]

# –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
keyboard = [
        ["üí® –î—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ", "üí° –°–æ–≤–µ—Ç –¥–ª—è —É—Å–ø–æ–∫–æ–µ–Ω–∏—è"],
        ["üìù –¢–µ—Å—Ç –Ω–∞ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å", "üéß –†–µ–ª–∞–∫—Å–∞—Ü–∏—è"],
        ["üå± –í—ã–±—Ä–∞—Ç—å —ç–º–æ—Ü–∏—é", "‚öôÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–¥—ã—Ö–µ"]]


# —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_notifications = {}

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
scheduler = AsyncIOScheduler()

# –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
async def start(update: Update, context: CallbackContext):
    user = update.message.from_user.first_name
    
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)
    
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user}! –Ø –±–æ—Ç –¥–ª—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ä–∞–∑–≥—Ä—É–∑–∫–∏.–î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ —Å–Ω–∏–∑–∏–º —Å—Ç—Ä–µ—Å—Å –∏ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å.üòä –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n"
        "üí® –¥—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ\n"
        "üí° —Å–æ–≤–µ—Ç—ã –¥–ª—è —É—Å–ø–æ–∫–æ–µ–Ω–∏—è\n"
        "üìù —Ç–µ—Å—Ç –Ω–∞ —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ ‚¨áÔ∏è",
        reply_markup = reply_markup
    )
    
    
# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞ –∫–ª–∞–≤
async def handle_buttons(update: Update, context: CallbackContext):
    text = update.message.text

    if text == "üí® –î—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ":
        await guided_breathing_start(update, context)
    elif text == "üí° –°–æ–≤–µ—Ç –¥–ª—è —É—Å–ø–æ–∫–æ–µ–Ω–∏—è":
        await random_advice(update, context)
    elif text == "üìù –¢–µ—Å—Ç –Ω–∞ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å":
        await anxiety_test(update, context)
    elif text == "üéß –†–µ–ª–∞–∫—Å–∞—Ü–∏—è":
        await audio_menu(update, context)
    elif text == "üå± –í—ã–±—Ä–∞—Ç—å —ç–º–æ—Ü–∏—é": 
        await emotion_selection(update, context)
    elif text == "‚öôÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–¥—ã—Ö–µ":
        await settings_menu(update, context)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
async def guided_breathing(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()

    await query.message.edit_text("–í–¥–æ—Ö–Ω–∏—Ç–µ —á–µ—Ä–µ–∑ –Ω–æ—Å –Ω–∞ 4 —Å–µ–∫—É–Ω–¥—ã... üòå")
    await asyncio.sleep(3)

    await query.message.edit_text("–ó–∞–¥–µ—Ä–∂–∏—Ç–µ –¥—ã—Ö–∞–Ω–∏–µ –Ω–∞ 7 —Å–µ–∫—É–Ω–¥... ‚è≥")
    await asyncio.sleep(6)

    await query.message.edit_text("–ú–µ–¥–ª–µ–Ω–Ω–æ –≤—ã–¥–æ—Ö–Ω–∏—Ç–µ —á–µ—Ä–µ–∑ —Ä–æ—Ç –Ω–∞ 8 —Å–µ–∫—É–Ω–¥... üå¨Ô∏è")
    await asyncio.sleep(7)

    await query.message.edit_text("–û—Ç–ª–∏—á–Ω–æ! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 4 —Ä–∞–∑–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞.")
        
async def audio_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    buttons = [
        [InlineKeyboardButton("üåß –î–æ–∂–¥—å", callback_data="audio_rain")],
        [InlineKeyboardButton("üå≤ –õ–µ—Å", callback_data="audio_forest")]
    ]
    await update.message.reply_text(
        "üéß –í—ã–±–µ—Ä–∏—Ç–µ –∑–≤—É–∫–æ–≤—É—é —Ç–µ—Ä–∞–ø–∏—é:",
        reply_markup=InlineKeyboardMarkup(buttons)
    )
# –±–∞–∑–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
AUDIO_LIBRARY = {
    "rain": {
        "file": os.path.abspath(os.path.join("music", "rain.mp3")), 
        "duration": 53
    },
    "forest": {
        "file": os.path.abspath(os.path.join("music", "forest.mp3")),
        "duration": 329
    }
}

async def play_audio(update: Update, context: CallbackContext):
    query = update.callback_query
    sound_key = query.data.split("_")[1]

    if sound_key not in AUDIO_LIBRARY:
        await query.message.reply_text("–û—à–∏–±–∫–∞: –ê—É–¥–∏–æ—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")
        return

    audio_file = AUDIO_LIBRARY[sound_key]["file"] 

    # print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–∏: {audio_file}")

    if not os.path.exists(audio_file):
        await query.message.reply_text(f"–û—à–∏–±–∫–∞: –ê—É–¥–∏–æ—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏ {audio_file}.")
        return

    await query.answer()
    await query.message.reply_text(f"üé∂ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è {sound_key} –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –º—É–∑—ã–∫–æ–π!")

    with open(audio_file, "rb") as audio:
        await query.message.reply_audio(audio=audio)
        
        
        
# –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫ –¥—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—é
async def guided_breathing_start(update: Update, context: CallbackContext):
    keyboard = [[InlineKeyboardButton("–î–∞–ª–µ–µ ‚ñ∂Ô∏è", callback_data="start_breathing")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–º—É —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—é. \n\n"
        "–Ø –±—É–¥—É –æ—Ç—Å—á–∏—Ç—ã–≤–∞—Ç—å –≤—Ä–µ–º—è, –∞ –≤—ã –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ. \n\n"
        "–ù–∞—á–Ω–µ–º!üî•",
        reply_markup=reply_markup
    )

# —Å–ª—É—á–∞–π–Ω—ã–π —Å–æ–≤–µ—Ç
async def random_advice(update, context):
    try:
        db_path = Path(__file__).parent / "motivation_db.json"
        
        with open(db_path, "r", encoding="utf-8") as f:
            advice_list = json.load(f)
        
        advice = random.choice(advice_list)
        author = f"\n ‚Äî {advice['author']}" if advice.get("author") else ""
        quote = f"üìå {advice['text']}{author}"
        
    except FileNotFoundError:
        quote = "‚ö†Ô∏è –§–∞–π–ª —Å —Å–æ–≤–µ—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    except json.JSONDecodeError:
        quote = "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ñ–∞–π–ª–∞!"
    except Exception as e:
        quote = f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}"
    
    await update.message.reply_text(quote)

# —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é —á–µ–ª–æ–≤–µ–∫–∞
async def emotion_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    buttons = [
        [InlineKeyboardButton("–¢—Ä–µ–≤–æ–≥–∞", callback_data="emotion_anxiety"),
         InlineKeyboardButton("–°—Ç—Ä–µ—Å—Å", callback_data="emotion_stress")],
        [InlineKeyboardButton("–£—Å—Ç–∞–ª–æ—Å—Ç—å", callback_data="emotion_fatigue"),
         InlineKeyboardButton("–ì–Ω–µ–≤", callback_data="emotion_anger")],
        [InlineKeyboardButton("–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ", callback_data="emotion_loneliness"),
         InlineKeyboardButton("–ê–ø–∞—Ç–∏—è", callback_data="emotion_apathy")],
        [InlineKeyboardButton("–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å", callback_data="emotion_confidence"),
         InlineKeyboardButton("–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ", callback_data="emotion_inspiration")],
        [InlineKeyboardButton("–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ", callback_data="emotion_calm"),
         InlineKeyboardButton("–†–∞–¥–æ—Å—Ç—å", callback_data="emotion_joy")]
    ]
    await update.message.reply_text(
        "üìå –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:",
        reply_markup=InlineKeyboardMarkup(buttons)
    )

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é
async def handle_emotion(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    emotion_key = query.data.split("_")[1] 

    emotion = EMOTION_MAPPING.get(emotion_key, None)

    if emotion is None:
        await query.message.edit_text("‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —ç–º–æ—Ü–∏—è!")
        return

    advice = random.choice(EMOTION_ADVICE[emotion])

    await query.message.edit_text(
        f"üåü –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∏ {emotion}:\n\n{advice}"
    )

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ—Å—Ç–∞
async def anxiety_test(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["test_step"] = 0
    context.user_data["scores"] = []
    keyboard = [[InlineKeyboardButton("–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç", callback_data="start_test")]]
    await update.message.reply_text("–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=InlineKeyboardMarkup(keyboard))

async def send_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    step = context.user_data["test_step"]
    
    if step >= len(SPIELBERGER_QUESTIONS):
        await finish_test(update, context)
        return
    
    buttons = [[InlineKeyboardButton(text, callback_data=value)] for text, value in ANSWER_OPTIONS]
    if step > 0:
        buttons.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="prev_question")])
    
    reply_markup = InlineKeyboardMarkup(buttons)
    text = f"–í–æ–ø—Ä–æ—Å {step+1}/{len(SPIELBERGER_QUESTIONS)}:\n{SPIELBERGER_QUESTIONS[step]}"
    
    if update.callback_query:
        await update.callback_query.message.edit_text(text, reply_markup=reply_markup)
    else:
        await update.message.reply_text(text, reply_markup=reply_markup)

async def handle_test_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    if query.data == "start_test":
        await send_question(update, context)
        return
    
    if query.data == "prev_question":
        if context.user_data["test_step"] > 0:
            context.user_data["test_step"] -= 1
        await send_question(update, context)
        return
    
    step = context.user_data["test_step"]
    raw_score = int(query.data)
    score = 4 - raw_score if (step + 1) in INVERTED_QUESTIONS else raw_score + 1
    context.user_data["scores"].append(score)
    
    context.user_data["test_step"] += 1
    await send_question(update, context)

def get_anxiety_level(score):
    if score < 12:
        return "–æ—á–µ–Ω—å –Ω–∏–∑–∫–∞—è"
    elif 12 <= score <= 30:
        return "–Ω–∏–∑–∫–∞—è"
    elif 31 <= score <= 44:
        return "—É–º–µ—Ä–µ–Ω–Ω–∞—è"
    else:
        return "–≤—ã—Å–æ–∫–∞—è"

async def finish_test(update: Update, context: ContextTypes.DEFAULT_TYPE):
    scores = context.user_data.get("scores", [])
    st_score = sum(scores[:20])
    lt_score = sum(scores[20:])
    
    def get_description(score, type_name):
        level = get_anxiety_level(score)
        text = ""
        
        # —Å–æ–≤–µ—Ç—ã –¥–ª—è –°–¢ –∏ –õ–¢ –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è
        if level == "–æ—á–µ–Ω—å –Ω–∏–∑–∫–∞—è":
            if type_name == "–°–∏—Ç—É–∞—Ç–∏–≤–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å":
                text = (
                    "‚ö†Ô∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–ø–∞—Ç–∏–∏ –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞. –°–æ–≤–µ—Ç: "
                    "üßò –¢–µ—Ö–Ω–∏–∫–∏ ¬´–∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å¬ª: –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 4-7-8), –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –º—ã—à–µ—á–Ω–∞—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è."
                    "üìù –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: —Ä–∞–∑–±–∏—Ç—å –∑–∞–¥–∞—á—É –Ω–∞ —ç—Ç–∞–ø—ã, —Å–æ—Å—Ç–∞–≤–∏—Ç—å —á–µ—Ç–∫–∏–π –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π."
                    "‚è≥ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ç—Ä–µ–≤–æ–≥—É: –≤—ã–¥–µ–ª–∏—Ç—å 10‚Äì15 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å –Ω–∞ –∞–Ω–∞–ª–∏–∑ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–π."
                )
            else:  # –ª–∏—á–Ω–æ—Å—Ç–Ω–∞—è
                text = (
                    "üîç –í–æ–∑–º–æ–∂–Ω–∞ –ø–æ–¥–∞–≤–ª–µ–Ω–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞ –∏–ª–∏ –Ω–∏–∑–∫–∞—è —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞. "
                    "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: –≤–µ–¥–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–∏–∫–∞ —ç–º–æ—Ü–∏–π, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞."
                )
                
        elif level == "–Ω–∏–∑–∫–∞—è":
            if type_name == "–°–∏—Ç—É–∞—Ç–∏–≤–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å":
                text = "üå§ –ù–æ—Ä–º–∞–ª—å–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è. –î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞: –ø—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å."
            else:
                text = (
                    "üîÖ –°–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∏–∑–±–µ–≥–∞—Ç—å —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π. "
                    "–°–æ–≤–µ—Ç: –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —Ä–∞—Å—à–∏—Ä—è–π—Ç–µ –∑–æ–Ω—É –∫–æ–º—Ñ–æ—Ä—Ç–∞."
                )
                
        elif level == "—É–º–µ—Ä–µ–Ω–Ω–∞—è":
            text = (  # –æ–±—â–∏–π —Å–æ–≤–µ—Ç
                "‚úÖ –ü–æ–ª–µ–∑–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. "
                "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: —Ä–µ–≥—É–ª—è—Ä–Ω—ã–π —Å–∞–º–æ–∞–Ω–∞–ª–∏–∑, –±–∞–ª–∞–Ω—Å —Ä–∞–±–æ—Ç—ã –∏ –æ—Ç–¥—ã—Ö–∞."
            )
            
        else:  # –≤—ã—Å–æ–∫–∞—è
            if type_name == "–°–∏—Ç—É–∞—Ç–∏–≤–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å":
                text = (
                    "üö® –û—Å—Ç—Ä—ã–π —Å—Ç—Ä–µ—Å—Å. –°—Ä–æ—á–Ω—ã–µ –º–µ—Ä—ã: –¥—ã—Ö–∞–Ω–∏–µ 4-7-8, "
                    "—Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –±–ª–∏–∑–∫–∏–º–∏."
                )
            else:
                text = (
                    "üî• –•—Ä–æ–Ω–∏—á–µ—Å–∫–∞—è —Ç—Ä–µ–≤–æ–≥–∞. –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ: –ö–ü–¢-—Ç–µ—Ö–Ω–∏–∫–∏, "
                    "—Ä–∞–±–æ—Ç–∞ —Å —É—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞."
                )
                
        return f"{type_name}: {score} ({level})\n{text}\n"

    result_text = (
        "üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:\n\n"
        f"{get_description(st_score, '–°–∏—Ç—É–∞—Ç–∏–≤–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å')}\n"
        f"{get_description(lt_score, '–õ–∏—á–Ω–æ—Å—Ç–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å')}\n"
        "üìå –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:\n"
        "- –°–∏—Ç—É–∞—Ç–∏–≤–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å: –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\n"
        "- –õ–∏—á–Ω–æ—Å—Ç–Ω–∞—è: —É—Å—Ç–æ–π—á–∏–≤–∞—è —á–µ—Ä—Ç–∞, —Ç—Ä–µ–±—É–µ—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–π —Ä–∞–±–æ—Ç—ã"
    )
    
    await update.effective_chat.send_message(text=result_text)

nest_asyncio.apply()
    
# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async def send_notification(user_id, context):
    message = (
        "‚ú® –í—Ä–µ–º—è —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤! ‚ú®\n\n"
        "üòå –†–∞—Å—Å–ª–∞–±—å—Å—è –∏ —É–¥–µ–ª–∏ –º–∏–Ω—É—Ç–∫—É –¥—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–º—É —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—é.\n"
        "üåø –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Å–Ω–∏–∑–∏—Ç—å —Å—Ç—Ä–µ—Å—Å –∏ —É–ª—É—á—à–∏—Ç—å –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é.\n\n"
        "üíô –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å ‚¨áÔ∏è"
    )

    keyboard = InlineKeyboardMarkup(
        [[InlineKeyboardButton("‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å –¥—ã—Ö–∞–Ω–∏–µ", callback_data="start_breathing")]]
    )

    try:
        await context.bot.send_message(chat_id=user_id, text=message, reply_markup=keyboard)
        # print(f"‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

# –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ send_notification
def notification_wrapper(user_id, context):
    async def wrapper():
        await send_notification(user_id, context)
    return wrapper

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async def settings_menu(update: Update, context: CallbackContext):
    buttons = [
        [InlineKeyboardButton("üîî –ö–∞–∂–¥—ã–µ 2 —á–∞—Å–∞", callback_data="every_2_hours")],
        [InlineKeyboardButton("üåû –£—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º", callback_data="morning_evening")],
        [InlineKeyboardButton("‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="disable_notifications")]
    ]
    
    reply_markup = InlineKeyboardMarkup(buttons)
    await update.message.reply_text(
        "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∑–∞–±–æ—Ç–µ –æ —Å–µ–±–µ! üå∏\n–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—Ç–æ—Ç—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: üïí",
        reply_markup=reply_markup
    )

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async def handle_notification_choice(update: Update, context: CallbackContext):
    query = update.callback_query
    user_id = query.from_user.id
    choice = query.data

    if scheduler.get_job(str(user_id)):
        scheduler.remove_job(str(user_id))
    if scheduler.get_job(f"{user_id}_morning"):
        scheduler.remove_job(f"{user_id}_morning")
    if scheduler.get_job(f"{user_id}_evening"):
        scheduler.remove_job(f"{user_id}_evening")

    if choice == "every_2_hours":
        scheduler.add_job(notification_wrapper(user_id, context), "interval", hours=2, name=str(user_id))
        user_notifications[user_id] = "–∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞"
        await query.answer("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã (–∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞).")

    elif choice == "morning_evening":
        scheduler.add_job(notification_wrapper(user_id, context), "cron", hour=10, minute=0, name=f"{user_id}_morning")
        scheduler.add_job(notification_wrapper(user_id, context), "cron", hour=16, minute=0, name=f"{user_id}_evening")
        user_notifications[user_id] = "—É—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º"
        await query.answer("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã (—É—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º).")

    elif choice == "disable_notifications":
        user_notifications.pop(user_id, None)
        await query.answer("‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã.")

async def main():
    scheduler.start()
    
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_buttons)) 
    
    # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
    app.add_handler(CallbackQueryHandler(guided_breathing, pattern="start_breathing"))
    
    # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∞
    app.add_handler(CallbackQueryHandler(handle_test_answer, pattern="start_test|prev_question|^[0-3]$"))
    
    # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é
    app.add_handler(CallbackQueryHandler(handle_emotion, pattern="^emotion_"))
    
    # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º—É–∑—ã–∫–∏
    app.add_handler(CommandHandler("audio", audio_menu))
    app.add_handler(CallbackQueryHandler(play_audio, pattern="^audio_"))
    
    
    # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    
    app.add_handler(CommandHandler("settings", settings_menu))
    app.add_handler(CallbackQueryHandler(handle_notification_choice))
    

    await app.run_polling()
    
if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())  
